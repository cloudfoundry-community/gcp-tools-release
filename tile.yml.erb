<%
["TILE_NAME", "TILE_LABEL", "RELEASE_PATH"].each do |var|
  raise "#{var} env variable required" if ENV[var].to_s.empty?
end
%>
---
name: <%=ENV["TILE_NAME"] %>
label: <%=ENV["TILE_LABEL"] %>
description: Import your Cloud Foundry logs and metrics into Stackdriver Logging and Monitoring for diagnostics and alerting
icon_file: gcp_logo.png
packages:
- name: stackdriver-tools
  type: bosh-release
  path: <%=ENV["RELEASE_PATH"] %>
  jobs:
  - name: stackdriver-nozzle
    templates:
    - name: stackdriver-nozzle
      release: stackdriver-tools
    memory: 512
    ephemeral_disk: 4096
    cpu: 2
    dynamic_ip: 1
    static_ip: 0
    instances: 2
    properties:
      firehose:
        endpoint: (( .properties.firehose_endpoint.value ))
        events_to_stackdriver_logging: (( .properties.firehose_events_to_stackdriver_logging.value ))
        events_to_stackdriver_monitoring: (( .properties.firehose_events_to_stackdriver_monitoring.value ))
        username: (( .properties.firehose_username.value || ..cf.uaa.stackdriver_nozzle_credentials.identity ))
        password: (( .properties.firehose_password.value || ..cf.uaa.stackdriver_nozzle_credentials.password ))
        skip_ssl: (( .properties.firehose_skip_ssl.value ))
        subscription_id: <%=ENV["TILE_NAME"] %>
      credentials:
        application_default_credentials: (( .properties.service_account.value ))
      gcp:
        project_id: (( .properties.project_id.value ))
      nozzle:
        metrics_buffer_duration: (( .properties.metrics_buffer_duration.value ))
        metrics_batch_size: (( .properties.metrics_batch_size.value ))
        metric_path_prefix: (( .properties.metric_path_prefix.value ))
        foundation_name: (( .properties.foundation_name.value ))
        logging_batch_count: (( .properties.logging_batch_count.value ))
        logging_batch_duration: (( .properties.logging_batch_duration.value ))
        debug: (( .properties.debug.value ))
        event_filters:
          blacklist: (( .properties.blacklist.value ))
          whitelist: (( .properties.whitelist.value ))


forms:
- name: nozzle-config
  label: Nozzle Configuration
  description: Configure access properties for the Stackdriver Nozzle here
  properties:
  - name: firehose_endpoint
    type: string
    label: Cloud Foundry API Endpoint
  - name: firehose_events_to_stackdriver_logging
    type: string
    default: HttpStartStop,LogMessage,Error
    label: Whitelist for Stackdriver Logging
    description: Comma separated list without spaces consisting of any or all of HttpStartStop,LogMessage,Error. ValueMetric,CounterEvent,ContainerMetric may also be used but they are in beta.
  - name: firehose_events_to_stackdriver_monitoring
    type: string
    default: CounterEvent,ValueMetric,ContainerMetric
    label: Whitelist for Stackdriver Monitoring
    description: Comma separated list without spaces consisting of any or all of ValueMetric,CounterEvent,ContainerMetric
  - name: firehose_username
    type: string
    label: UAA Username
    description: UAA user with doppler.firehose and cloud_controller.admin_read_only permissions
    optional: true
  - name: firehose_password
    type: secret
    label: UAA Password
    optional: true
  - name: firehose_skip_ssl
    type: string
    default: 'false'
    label: Skip SSL validation on Cloud Foundry API Endpoint
  - name: service_account
    type: text
    label: Service Account Credentials
    description: JSON string credentials for a Service Account with logging.logWriter and logging.configWriter permissions
  - name: project_id
    type: string
    label: Google Project ID
    description: Project id for project with logging and monitoring APIs enabled
  - name: metrics_buffer_duration
    type: integer
    default: 30
    label: Metrics Buffer Duration
    description: Flush interval (in seconds) of the internal metric buffer
  - name: metrics_batch_size
    type: integer
    default: 200
    label: Metrics Batch Size
    description: Batch size for time series being sent to Stackdriver
  - name: logging_batch_duration
    type: integer
    default: 30
    label: Logging Buffer Duration
    description: Flush interval (in seconds) of the internal logging buffer
  - name: logging_batch_count
    type: integer
    default: 1000
    label: Logging Batch Count
    description: Batch size for log messages being sent to Stackdriver
  - name: metric_path_prefix
    type: string
    default: firehose
    label: Metric Path Prefix
    description: Prefix added to all metric names being sent to Stackdriver, e.g. 'custom/PREFIX/gorouter.total_requests'. May contain slashes.
  - name: foundation_name
    type: string
    default: cf
    label: Foundation Name
    description: Name added as the 'foundation' label to all time series being sent to Stackdriver, useful for differentiating between multiple PCF instances in a project.
  - name: debug
    type: boolean
    default: false
    label: Nozzle Debugging
    description: Enable Nozzle Debugging Features. With this enabled each Stackdriver Nozzle instance will host a web server on port 6060 that exposes debug information such as a heap dump and running threads.
- name: event_filters
  label: Event Filters
  description: Configure regexp-based blacklists / whitelists for firehose events here.
  markdown: |
    ## Event Filters

    Event filters allow users to selectively enable or disable the processing of
    firehose events by the Stackdriver Nozzle. The default behaviour is to process
    all events. Events that match a blacklist filter will not be processed unless
    they also match a whitelist filter.

    A filter rule has three elements.

    *   A *regexp*, which must be a valid regular expression.
    *   A *type*, which may be either "name" or "job".
        *   *name* matches against a concatenation of event _origin_ and metric _name_,
            and is only applicable for CounterEvent and ValueMetric event types.
        *   *job* matches against the event _job_.
    *   A *sink*, which may be either "monitoring", "logging", or "all". The latter
        applies the rule to all firehose events, while the other two restrict the
        filter rule to events destined for Stackdriver Monitoring or Logging
        respectively.
  properties:
  - name: blacklist
    type: collection
    label: Event Blacklist
    description: Events matching these blacklist filters will not be propagated to Stackdriver.
    configurable: true
    optional: true
    property_blueprints:
    - name: regexp
      type: string
      label: Regexp
    - name: type
      type: dropdown_select
      label: Type
      options:
      - name: job
        label: Job
        default: true
      - name: name
        label: Name
    - name: sink
      type: dropdown_select
      label: Sink
      options:
      - name: all
        label: All
        default: true
      - name: logging
        label: Stackdriver Logging
      - name: monitoring
        label: Stackdriver Monitoring
  - name: whitelist
    type: collection
    label: Event Whitelist
    description: Events matching these whitelist filters will be propagated to Stackdriver even if they match a blacklist filter above.
    configurable: true
    optional: true
    property_blueprints:
    - name: regexp
      type: string
      label: Regexp
    - name: type
      type: dropdown_select
      label: Type
      options:
      - name: job
        label: Job
        default: true
      - name: name
        label: Name
    - name: sink
      type: dropdown_select
      label: Sink
      options:
      - name: all
        label: All
        default: true
      - name: logging
        label: Stackdriver Logging
      - name: monitoring
        label: Stackdriver Monitoring

requires_product_versions:
 - name: cf
   version: '>= 1.9.29'
